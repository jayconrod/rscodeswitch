class Empty {}
print Empty; // Output: <function>
var empty = Empty();
print empty; // Output: <object>
empty.x = 12;
print empty.x; // Output: 12
print empty.x = 34; // Output: 34
print empty.x; // Output: 34

class HasMethod {
  m(x) {
    print x;
  }
}
var hm = HasMethod();
hm.m("has method"); // Output: has method

class HasInitializer {
  init(x) {
    this.x = x;
  }
  print_x() {
    print this.x;
  }
}
var hi = HasInitializer("has field");
hi.print_x(); // Output: has field

fun outer(x) {
  class Capture {
    m() {
      print x;
    }
  }
  return Capture();
}
var o = outer("captured");
o.m(); // Output: captured

class BoundMethod {
  init(x) {
    this.x = x;
  }
  print_x() {
    print this.x;
  }
}
var bm = BoundMethod("instance of BoundMethod");
var px = bm.print_x;
px(); // Output: instance of BoundMethod

fun outer_for_bound_method(x, y) {
  class BoundMethodWithCapture {
    init(x) {
      this.x = x;
    }
    add(z) {
      return this.x + y + z;
    }
  }
  return BoundMethodWithCapture(x);
}
var bmc = outer_for_bound_method(1, 2);
print bmc.add(3); // Output: 6
